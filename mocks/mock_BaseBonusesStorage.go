// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/erupshis/bonusbridge/internal/bonuses/storage (interfaces: BaseBonusesStorage)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	data "github.com/erupshis/bonusbridge/internal/bonuses/data"
	gomock "github.com/golang/mock/gomock"
)

// MockBaseBonusesStorage is a mock of BaseBonusesStorage interface.
type MockBaseBonusesStorage struct {
	ctrl     *gomock.Controller
	recorder *MockBaseBonusesStorageMockRecorder
}

// MockBaseBonusesStorageMockRecorder is the mock recorder for MockBaseBonusesStorage.
type MockBaseBonusesStorageMockRecorder struct {
	mock *MockBaseBonusesStorage
}

// NewMockBaseBonusesStorage creates a new mock instance.
func NewMockBaseBonusesStorage(ctrl *gomock.Controller) *MockBaseBonusesStorage {
	mock := &MockBaseBonusesStorage{ctrl: ctrl}
	mock.recorder = &MockBaseBonusesStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBaseBonusesStorage) EXPECT() *MockBaseBonusesStorageMockRecorder {
	return m.recorder
}

// GetBalance mocks base method.
func (m *MockBaseBonusesStorage) GetBalance(arg0 context.Context, arg1 int64) (*data.Balance, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBalance", arg0, arg1)
	ret0, _ := ret[0].(*data.Balance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBalance indicates an expected call of GetBalance.
func (mr *MockBaseBonusesStorageMockRecorder) GetBalance(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBalance", reflect.TypeOf((*MockBaseBonusesStorage)(nil).GetBalance), arg0, arg1)
}

// GetWithdrawals mocks base method.
func (m *MockBaseBonusesStorage) GetWithdrawals(arg0 context.Context, arg1 int64) ([]data.Withdrawal, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWithdrawals", arg0, arg1)
	ret0, _ := ret[0].([]data.Withdrawal)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWithdrawals indicates an expected call of GetWithdrawals.
func (mr *MockBaseBonusesStorageMockRecorder) GetWithdrawals(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWithdrawals", reflect.TypeOf((*MockBaseBonusesStorage)(nil).GetWithdrawals), arg0, arg1)
}

// WithdrawBonuses mocks base method.
func (m *MockBaseBonusesStorage) WithdrawBonuses(arg0 context.Context, arg1 *data.Withdrawal) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WithdrawBonuses", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// WithdrawBonuses indicates an expected call of WithdrawBonuses.
func (mr *MockBaseBonusesStorageMockRecorder) WithdrawBonuses(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WithdrawBonuses", reflect.TypeOf((*MockBaseBonusesStorage)(nil).WithdrawBonuses), arg0, arg1)
}
